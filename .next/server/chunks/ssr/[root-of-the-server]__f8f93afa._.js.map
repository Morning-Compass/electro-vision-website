{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///home/tomek/electro-vision/electro-vision-website/ev-const/api-links.ts"],"sourcesContent":["const rustHost = \"http://localhost:3501\";\nconst pythonHost = \"http://localhost:8000\";\n\nconst ApiLinks = {\n  register: rustHost + \"/auth/register\",\n  loginEmail: rustHost + \"/auth/login/email\",\n  loginUsername: rustHost + \"/auth/login/username\",\n  validateAccount: rustHost + \"/auth/validate/account\",\n  resetPasswordRequest: rustHost + \"/auth/reset/password/\", //token after /\n  resetPassword: rustHost + \"/auth/reset/password\",\n  verifySession: rustHost + \"/auth/validate/session\",\n  createWorkspace: rustHost + \"/workspace/create\",\n  uploadImage: pythonHost + \"/images/upload/\",\n  listWorkspaces: rustHost + \"/workspace/list\",\n  listWorkspaceUsersByWorkspaceIdAndEmail: (id: string) => {\n    return rustHost + \"/workspace/\" + id + \"/users/list\";\n  },\n  listFiles: pythonHost + \"/images/list-files/\",\n  retrieveFiles: pythonHost + \"/images/all-files\",\n  removeFile: pythonHost + \"/images/remove-file\",\n  inviteWorker: rustHost + \"/workspace/invitation/create\",\n  invitationWorkerAccept: (token: string) => {\n    return rustHost + \"/workspace/invitation/accept/\" + token;\n  },\n  listTasks: (id: string) => {\n    return rustHost + \"/workspace/\" + id + \"/tasks/list\";\n  },\n  createTasks: (id: string) => {\n    return rustHost + \"/workspace/\" + id + \"/tasks/create\";\n  },\n} as const;\n\nexport default ApiLinks;\n"],"names":[],"mappings":";;;AAAA,MAAM,WAAW;AACjB,MAAM,aAAa;AAEnB,MAAM,WAAW;IACf,UAAU,WAAW;IACrB,YAAY,WAAW;IACvB,eAAe,WAAW;IAC1B,iBAAiB,WAAW;IAC5B,sBAAsB,WAAW;IACjC,eAAe,WAAW;IAC1B,eAAe,WAAW;IAC1B,iBAAiB,WAAW;IAC5B,aAAa,aAAa;IAC1B,gBAAgB,WAAW;IAC3B,yCAAyC,CAAC;QACxC,OAAO,WAAW,gBAAgB,KAAK;IACzC;IACA,WAAW,aAAa;IACxB,eAAe,aAAa;IAC5B,YAAY,aAAa;IACzB,cAAc,WAAW;IACzB,wBAAwB,CAAC;QACvB,OAAO,WAAW,kCAAkC;IACtD;IACA,WAAW,CAAC;QACV,OAAO,WAAW,gBAAgB,KAAK;IACzC;IACA,aAAa,CAAC;QACZ,OAAO,WAAW,gBAAgB,KAAK;IACzC;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/tomek/electro-vision/electro-vision-website/components/templates/PageTemplate.tsx"],"sourcesContent":["\"use client\";\n\nimport Link from \"next/link\";\nimport { ReactNode } from \"react\";\n\ntype CleanPageProps = {\n  children: ReactNode;\n  bgClass?: string;\n  allowUnauthenticated?: boolean;\n};\n\nconst PageTemplate = ({\n  children,\n  bgClass,\n  allowUnauthenticated = false,\n}: CleanPageProps) => {\n  const baseClasses = `bg-center bg-white bg-fixed bg-cover text-black min-h-screen w-screen font-mono gap-5 flex flex-col items-center h-[100vh] ${bgClass || \"\"}`;\n\n  return <main className={baseClasses}>{children}</main>;\n};\n\nexport default PageTemplate;\n"],"names":[],"mappings":";;;;AAAA;;AAWA,MAAM,eAAe,CAAC,EACpB,QAAQ,EACR,OAAO,EACP,uBAAuB,KAAK,EACb;IACf,MAAM,cAAc,CAAC,2HAA2H,EAAE,WAAW,IAAI;IAEjK,qBAAO,6WAAC;QAAK,WAAW;kBAAc;;;;;;AACxC;uCAEe","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///home/tomek/electro-vision/electro-vision-website/ev-lib/ElectroVisionFetch.ts"],"sourcesContent":["type TData = string | object | FormData;\ntype TPutData = string | object | FormData | undefined;\ntype THeaders = HeadersInit | undefined;\n\nexport class ElectroVisionFetch {\n  private defaultHeaders = { \"Content-Type\": \"application/json\" };\n\n  private async makeRequest(\n    method: string,\n    endpointUrl: string,\n    data?: TData | TPutData,\n    headers?: THeaders,\n  ): Promise<any> {\n    const isFormData = data instanceof FormData;\n\n    const requestHeaders = isFormData\n      ? new Headers(headers)\n      : new Headers(headers || this.defaultHeaders);\n\n    const body = isFormData\n      ? data\n      : data && typeof data !== \"string\"\n        ? JSON.stringify(data)\n        : data;\n\n    const response = await fetch(endpointUrl, {\n      method,\n      headers: requestHeaders,\n      body,\n    });\n\n    if (!response.ok) {\n      let errorMessage = `Request failed with status ${response.status}`;\n      try {\n        const responseData = await response.json();\n        errorMessage = responseData?.response || errorMessage;\n      } catch (e) {\n        console.error(\"Failed to parse json res\");\n        // Failed to parse JSON error response\n      }\n      throw new Error(errorMessage);\n    }\n\n    try {\n      const responseData = await response.json();\n      return responseData.response ?? responseData;\n    } catch (e) {\n      throw new Error(\"Failed to parse JSON response\");\n    }\n  }\n\n  async get(endpointUrl: string, headers?: THeaders): Promise<any> {\n    return this.makeRequest(\"GET\", endpointUrl, undefined, headers);\n  }\n\n  async post(\n    endpointUrl: string,\n    data: TData,\n    headers?: THeaders,\n  ): Promise<any> {\n    return this.makeRequest(\"POST\", endpointUrl, data, headers);\n  }\n\n  async put(\n    endpointUrl: string,\n    data?: TPutData,\n    headers?: THeaders,\n  ): Promise<any> {\n    return this.makeRequest(\"PUT\", endpointUrl, data, headers);\n  }\n\n  async delete(\n    endpointUrl: string,\n    data: TData,\n    headers?: THeaders,\n  ): Promise<any> {\n    return this.makeRequest(\"DELETE\", endpointUrl, data, headers);\n  }\n}\n\nconst OLF = new ElectroVisionFetch();\nexport default OLF;\n"],"names":[],"mappings":";;;;AAIO,MAAM;IACH,iBAAiB;QAAE,gBAAgB;IAAmB,EAAE;IAEhE,MAAc,YACZ,MAAc,EACd,WAAmB,EACnB,IAAuB,EACvB,OAAkB,EACJ;QACd,MAAM,aAAa,gBAAgB;QAEnC,MAAM,iBAAiB,aACnB,IAAI,QAAQ,WACZ,IAAI,QAAQ,WAAW,IAAI,CAAC,cAAc;QAE9C,MAAM,OAAO,aACT,OACA,QAAQ,OAAO,SAAS,WACtB,KAAK,SAAS,CAAC,QACf;QAEN,MAAM,WAAW,MAAM,MAAM,aAAa;YACxC;YACA,SAAS;YACT;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,IAAI,eAAe,CAAC,2BAA2B,EAAE,SAAS,MAAM,EAAE;YAClE,IAAI;gBACF,MAAM,eAAe,MAAM,SAAS,IAAI;gBACxC,eAAe,cAAc,YAAY;YAC3C,EAAE,OAAO,GAAG;gBACV,QAAQ,KAAK,CAAC;YACd,sCAAsC;YACxC;YACA,MAAM,IAAI,MAAM;QAClB;QAEA,IAAI;YACF,MAAM,eAAe,MAAM,SAAS,IAAI;YACxC,OAAO,aAAa,QAAQ,IAAI;QAClC,EAAE,OAAO,GAAG;YACV,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,MAAM,IAAI,WAAmB,EAAE,OAAkB,EAAgB;QAC/D,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,aAAa,WAAW;IACzD;IAEA,MAAM,KACJ,WAAmB,EACnB,IAAW,EACX,OAAkB,EACJ;QACd,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,aAAa,MAAM;IACrD;IAEA,MAAM,IACJ,WAAmB,EACnB,IAAe,EACf,OAAkB,EACJ;QACd,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,aAAa,MAAM;IACpD;IAEA,MAAM,OACJ,WAAmB,EACnB,IAAW,EACX,OAAkB,EACJ;QACd,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,aAAa,MAAM;IACvD;AACF;AAEA,MAAM,MAAM,IAAI;uCACD","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///home/tomek/electro-vision/electro-vision-website/app/invitation/%5Btoken%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport ApiLinks from \"@/ev-const/api-links\";\nimport PageTemplate from \"@/components/templates/PageTemplate\";\nimport React, { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport OLF from \"@/ev-lib/ElectroVisionFetch\";\nimport { useParams } from \"next/navigation\";\nimport { Loader2, CheckCircle2, XCircle } from \"lucide-react\";\n\nconst VerifiAccountPage = () => {\n  const params = useParams();\n  const [invToken, setInvToken] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [validated, setValidated] = useState(false);\n  const [err, setErr] = useState<string | null>(null);\n\n  useEffect(() => {\n    const token = Array.isArray(params.token) ? params.token[0] : params.token;\n    setInvToken(token || null);\n  }, [params.token]);\n\n  const validateAccount = async () => {\n    if (!invToken) return;\n    return await OLF.put(ApiLinks.invitationWorkerAccept(invToken));\n  };\n\n  useEffect(() => {\n    const validate = async () => {\n      setLoading(true);\n      try {\n        const response = await validateAccount();\n        console.log(response);\n        setValidated(true);\n        toast.success(\"Account validated!\", { duration: 3000 });\n      } catch (error) {\n        console.error(\"Registration error:\", error);\n        setErr(\n          error instanceof Error ? error.message : \"Account validation failed\",\n        );\n        toast.error(\n          error instanceof Error ? error.message : \"Account validation failed\",\n          { duration: 5000 },\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (invToken) validate();\n  }, [invToken]);\n\n  return (\n    <PageTemplate allowUnauthenticated={true}>\n      <div className=\"flex flex-col items-center justify-center min-h-[60vh] gap-6 text-center px-4\">\n        <h1 className=\"text-3xl sm:text-4xl font-bold text-ev-text\">\n          Processing Invitation...\n        </h1>\n\n        <p className=\"text-ev-subtext\">\n          Token: <span className=\"break-all font-mono\">{invToken}</span>\n        </p>\n\n        {loading && (\n          <div className=\"flex flex-col items-center gap-2 mt-4 animate-pulse text-ev-accent-text\">\n            <Loader2 className=\"w-10 h-10 animate-spin\" />\n            <p>Validating invitation, please wait...</p>\n          </div>\n        )}\n\n        {!loading && validated && (\n          <div className=\"flex flex-col items-center gap-2 mt-4 text-green-600\">\n            <CheckCircle2 className=\"w-10 h-10\" />\n            <p className=\"text-xl font-semibold\">✅ Invitation was accepted!</p>\n          </div>\n        )}\n\n        {!loading && err && (\n          <div className=\"flex flex-col items-center gap-2 mt-4 text-red-600\">\n            <XCircle className=\"w-10 h-10\" />\n            <p className=\"text-xl font-semibold\">❌ {err}</p>\n          </div>\n        )}\n      </div>\n    </PageTemplate>\n  );\n};\n\nexport default VerifiAccountPage;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;;;;;;;;;AAUA,MAAM,oBAAoB;IACxB,MAAM,SAAS,CAAA,GAAA,iQAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAiB;IACxD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAiB;IAE9C,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,MAAM,OAAO,CAAC,OAAO,KAAK,IAAI,OAAO,KAAK,CAAC,EAAE,GAAG,OAAO,KAAK;QAC1E,YAAY,SAAS;IACvB,GAAG;QAAC,OAAO,KAAK;KAAC;IAEjB,MAAM,kBAAkB;QACtB,IAAI,CAAC,UAAU;QACf,OAAO,MAAM,+HAAA,CAAA,UAAG,CAAC,GAAG,CAAC,2HAAA,CAAA,UAAQ,CAAC,sBAAsB,CAAC;IACvD;IAEA,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW;YACf,WAAW;YACX,IAAI;gBACF,MAAM,WAAW,MAAM;gBACvB,QAAQ,GAAG,CAAC;gBACZ,aAAa;gBACb,sSAAA,CAAA,UAAK,CAAC,OAAO,CAAC,sBAAsB;oBAAE,UAAU;gBAAK;YACvD,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,uBAAuB;gBACrC,OACE,iBAAiB,QAAQ,MAAM,OAAO,GAAG;gBAE3C,sSAAA,CAAA,UAAK,CAAC,KAAK,CACT,iBAAiB,QAAQ,MAAM,OAAO,GAAG,6BACzC;oBAAE,UAAU;gBAAK;YAErB,SAAU;gBACR,WAAW;YACb;QACF;QAEA,IAAI,UAAU;IAChB,GAAG;QAAC;KAAS;IAEb,qBACE,6WAAC,wIAAA,CAAA,UAAY;QAAC,sBAAsB;kBAClC,cAAA,6WAAC;YAAI,WAAU;;8BACb,6WAAC;oBAAG,WAAU;8BAA8C;;;;;;8BAI5D,6WAAC;oBAAE,WAAU;;wBAAkB;sCACtB,6WAAC;4BAAK,WAAU;sCAAuB;;;;;;;;;;;;gBAG/C,yBACC,6WAAC;oBAAI,WAAU;;sCACb,6WAAC,qSAAA,CAAA,UAAO;4BAAC,WAAU;;;;;;sCACnB,6WAAC;sCAAE;;;;;;;;;;;;gBAIN,CAAC,WAAW,2BACX,6WAAC;oBAAI,WAAU;;sCACb,6WAAC,ySAAA,CAAA,eAAY;4BAAC,WAAU;;;;;;sCACxB,6WAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;gBAIxC,CAAC,WAAW,qBACX,6WAAC;oBAAI,WAAU;;sCACb,6WAAC,gSAAA,CAAA,UAAO;4BAAC,WAAU;;;;;;sCACnB,6WAAC;4BAAE,WAAU;;gCAAwB;gCAAG;;;;;;;;;;;;;;;;;;;;;;;;AAMpD;uCAEe","debugId":null}}]
}